# MLP common data service configuration file 
# for testing locally against a MariaDB instance.

# Tell Spring to use this file by setting the environment variable
# but WITHOUT the ".properties" suffix, exactly like this:
#   SPRING_CONFIG_NAME=application-mariadb java -jar target/cds.jar 

###############################################################

# The following properties are different in all deployments; 
# values must be externalized in docker-start scripts like
# docker-compose.yml

server.port=8081

# REST endpoints are protected by HTTP Basic Authentication
# Encrypted password - see README.md
security.user.name=ccds-web-user
security.user.password = ccds-web-pass
# Encrypted password - see README.md
# security.user.password = ENC(CTQD7Xk5bOIuC4MaqRZtzjW1K4ArjCjr)

# This works for Mysql and MariaDB
spring.database.driver.classname = org.mariadb.jdbc.Driver
# Database coordinates
spring.datasource.url = jdbc:mysql://cognita-db.research.att.com:3306/cdstest?useSSL=false
spring.datasource.username = ccds_user
spring.datasource.password = ccds_pass
# Encrypted password - see README.md
# spring.datasource.password = ENC(neXyzs+frWL6UQmH5Ii+tO5eo0Lkk9x+)
# Platform name is used to find data.sql file on classpath
spring.datasource.platform = mariadb
# This test uses Mariadb
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# don't create the schema, just validate the contents
spring.jpa.hibernate.ddl-auto=validate

###############################################################

# The following properties are similar in all deployments,
# so the values can be externalized as needed.

# REST endpoint configuration; i.e., where this server listens
server.contextPath=/ccds

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.show-sql=true
# Generate names as annotated which use upper case.
# Without this config Spring uses lower case, which requires case-insensitivity at database.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# this breaks swagger, don't add it!
# spring.resources.add-mappings=false

# Guards passwords
jasypt.encryptor.password=supersecret

# Guards sensitive HTTP endpoints
management.security.roles=SUPERUSER

# Specific loggers can be configured here:
# logging.level.org.springframework.web=INFO
