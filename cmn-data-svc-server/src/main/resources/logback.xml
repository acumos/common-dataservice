<?xml version="1.0" encoding="UTF-8"?>
<!--
  ===============LICENSE_START=======================================================
  Acumos
  ===================================================================================
  Copyright (C) 2017 AT&T Intellectual Property & Tech Mahindra. All rights reserved.
  ===================================================================================
  This Acumos software file is distributed by AT&T and Tech Mahindra
  under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
   
	   http://www.apache.org/licenses/LICENSE-2.0
   
  This file is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ===============LICENSE_END=========================================================
  -->

<configuration scan="true" debug="false">

	<!-- component name is log file basename -->
	<property name="componentName" value="cmn-data-svc"></property>

	<!-- gather files in a subdirectory - usually a volume in docker -->
	<property name="logDirectory" value="logs/ccds" />

	<property name="p_tim" value="%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}" />
	<property name="p_thr" value="%thread" />
	<property name="p_lvl" value="%level" />
	<property name="p_log" value="%logger" />
	<property name="p_mdc" value="%replace(%replace(%mdc){'\t','\\\\t'}){'\n', '\\\\n'}" />
	<property name="p_msg" value="%replace(%replace(%msg){'\t', '\\\\t'}){'\n','\\\\n'}" />
	<property name="p_exc" value="%replace(%replace(%rootException){'\t', '\\\\t'}){'\n','\\\\n'}" />
	<property name="p_mrk" value="%replace(%replace(%marker){'\t', '\\\\t'}){'\n','\\\\n'}" />
	<property name="no_mdc" value="%X{DO_NOT_REPEAT_MDC}" /> <!-- a no-op -->
	<property name="singleLineAthenaPattern" value="%date{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;,UTC}|%X{EntryTimestamp}|%X{InvokeTimestamp}|%X{RequestID}|%X{InvocationID}|%X{InstanceUUID}|%X{ServiceInstanceID}|${p_thr}|%X{ServiceName}|%X{PartnerName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDescription}|%.-5level|%X{Severity}|%X{ServerIPAddress}|%X{Timer}|%X{ServerFQDN}|%X{ClientIPAddress}|%X{VirtualServerName}|%X{ContextName}|%X{TargetEntity}|%X{ClassName}|%X{TargetElement}|%X{User}|${p_log}|${no_mdc}|%msg|${p_mrk}%n" />
	<property name="singleLineBoreasPattern" value="%nopexception${p_tim}\t${p_thr}\t${p_lvl}\t${p_log}\t${p_mdc}\t${p_msg}\t${p_exc}\t${p_mrk}\t%n" />
	<property name="multiLineBoreasPattern" value="%nopexception${p_tim}\t${p_thr}\t${p_lvl}\t${p_log}\t%mdc\t%msg\t%rootException\t%marker\t%n" />

	<!-- Passes only events with level WARN or above -->
	<appender name="console-warn" class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>WARN</level>
		</filter>
		<encoder>
			<pattern>${singleLineAthenaPattern}</pattern>
		</encoder>
	</appender>

	<appender name="file-rolling" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logDirectory}/${componentName}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logDirectory}/${componentName}.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>9</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>5MB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${singleLineAthenaPattern}</pattern>
		</encoder>
	</appender>

	<appender name="file-async" class="ch.qos.logback.classic.AsyncAppender">
		<queueSize>256</queueSize>
		<appender-ref ref="file-rolling" />
	</appender>

	<!-- The root level is the default for loggers, NOT a filter/threshold value.
		 It can be set with property logging.level.root=LEVEL. -->
	<root level="INFO">
		<appender-ref ref="file-async" />
		<appender-ref ref="console-warn" />
	</root>

	<!-- Show SQL generated for Criteria queries like this: 
		<logger name="org.hibernate.SQL" level="DEBUG" />
	-->
	<!-- Setting root level to debug yields *enormous* output from Spring,
		 limit that verbose output by setting these also:
		<logger name="org.apache.http" level="INFO" />
		<logger name="org.springframework.web.client" level="INFO" />
		<logger name="org.springframework.beans.factory.support" level="INFO"/>
		<logger name="springfox.documentation" level="INFO" />
		<logger name="org.hibernate.engine.jdbc.spi" level="INFO" />
	 -->

</configuration>
