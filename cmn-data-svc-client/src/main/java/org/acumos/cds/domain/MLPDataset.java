/*-
 * ===============LICENSE_START=======================================================
 * Acumos
 * ===================================================================================
 * Copyright (C) 2018 AT&T Intellectual Property. All rights reserved.
 * ===================================================================================
 * This Acumos software file is distributed by AT&T
 * under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *  
 *      http://www.apache.org/licenses/LICENSE-2.0
 *  
 * This file is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ===============LICENSE_END=========================================================
 */

package org.acumos.cds.domain;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;

import io.swagger.annotations.ApiModelProperty;

/**
 * Model for a dataset.
 * 
 * 
 */
@Entity
@Table(name = "C_DATASET")
public class MLPDataset extends MLPTimestampedEntity implements Serializable {

	private static final long serialVersionUID = 4077339550184330650L;
	
	@Id
	@GeneratedValue(generator = "customUseOrGenerate")
	@GenericGenerator(name = "customUseOrGenerate", strategy = "org.acumos.cds.util.UseExistingOrNewUUIDGenerator")
	@Column(name = "DATASET_ID", nullable = false, updatable = false, columnDefinition = "CHAR(36)")
	@Size(max = 36)
	// Users MAY submit an ID; readOnly annotation must NOT be used
	@ApiModelProperty(value = "UUID; omit for system-generated value", example = "12345678-abcd-90ab-cdef-1234567890ab")
	// Generated by DB; NotNull annotation not needed
	private String datasetId;

	@Column(name = "DATASET_NAME", columnDefinition = "VARCHAR(100)")
	@Size(max = 100)
	private String datasetName;

	@Column(name = "DATASET_DESC", columnDefinition = "VARCHAR(500)")
	@Size(max = 500)
	private String datasetDescription;
	
	/**
	 * No-arg constructor.
	 */
	public MLPDataset() {
		// no-arg constructor
	}

	/**
	 * 
	 * @param datasetId
	 * @param datasetName
	 * @param datasetDescription
	 */
	public MLPDataset(String datasetId, String datasetName, String datasetDescription) {
		super();
		
		if (datasetId ==null || datasetName == null || datasetDescription == null)
			throw new IllegalArgumentException("Null not permitted");
		
		this.datasetId = datasetId;
		this.datasetName = datasetName;
		this.datasetDescription = datasetDescription;
	}

	public String getDatasetId() {
		return datasetId;
	}

	public void setDatasetId(String datasetId) {
		this.datasetId = datasetId;
	}

	public String getDatasetName() {
		return datasetName;
	}

	public void setDatasetName(String datasetName) {
		this.datasetName = datasetName;
	}

	public String getDatasetDescription() {
		return datasetDescription;
	}

	public void setDatasetDescription(String datasetDescription) {
		this.datasetDescription = datasetDescription;
	}

	@Override
	public String toString() {
		return this.getClass().getName() +" [datasetId=" + datasetId + ", datasetName=" + datasetName + ", datasetDescription="
				+ datasetDescription + "]";
	}
	
	

}
