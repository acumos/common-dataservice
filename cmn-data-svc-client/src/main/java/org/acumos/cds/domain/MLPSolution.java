/*-
 * ===============LICENSE_START=======================================================
 * Acumos
 * ===================================================================================
 * Copyright (C) 2017 AT&T Intellectual Property & Tech Mahindra. All rights reserved.
 * ===================================================================================
 * This Acumos software file is distributed by AT&T and Tech Mahindra
 * under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *  
 *      http://www.apache.org/licenses/LICENSE-2.0
 *  
 * This file is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ===============LICENSE_END=========================================================
 */

package org.acumos.cds.domain;

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

/**
 * Model for a solution. In a one:many relationship with revisions and many:many
 * relationship with solutions, neither of which is annotated nor available
 * here.
 */
@Entity
@Table(name = "C_SOLUTION")
public class MLPSolution extends MLPTimestampedEntity implements Serializable {

	private static final long serialVersionUID = 745945642089325612L;

	@Id
	@GeneratedValue(generator = "customUseOrGenerate")
	@GenericGenerator(name = "customUseOrGenerate", strategy = "org.acumos.cds.util.UseExistingOrNewUUIDGenerator")
	@Column(name = "SOLUTION_ID", updatable = false, nullable = false, columnDefinition = "CHAR(36)")
	// Generated by DB; NotNull annotation not needed
	private String solutionId;

	@Column(name = "NAME", nullable = false, columnDefinition = "VARCHAR(100)")
	@NotNull(message = "Name cannot be null")
	@Size(max = 100)
	private String name;

	@Column(name = "DESCRIPTION", columnDefinition = "VARCHAR(512)")
	@Size(max = 512)
	private String description;

	@Column(name = "OWNER_ID", nullable = false, columnDefinition = "CHAR(36)")
	@NotNull(message = "OwnerId cannot be null")
	@Size(max = 36)
	private String ownerId;

	@Column(name = "PROVIDER", columnDefinition = "CHAR(64)")
	@Size(max = 64)
	private String provider;

	@Column(name = "METADATA", columnDefinition = "VARCHAR(1024)")
	@Size(max = 1024)
	private String metadata;

	@Column(name = "ACTIVE_YN", nullable = false, columnDefinition = "CHAR(1) DEFAULT 'Y'")
	@Type(type = "yes_no")
	private boolean active;

	/**
	 * This exposes the database code for simplicity. Alternately this column could
	 * be mapped using @ManyToOne and @JoinColumn as an MLPAcessType object.
	 */
	@Column(name = "ACCESS_TYPE_CD", columnDefinition = "CHAR(2)")
	@Size(max = 2)
	private String accessTypeCode;

	/**
	 * This exposes the database code for simplicity. Alternately this column could
	 * be mapped using @ManyToOne and @JoinColumn as an MLPModelType object.
	 */
	@Column(name = "MODEL_TYPE_CD", columnDefinition = "CHAR(2)")
	@Size(max = 2)
	private String modelTypeCode;

	/**
	 * This exposes the database code for simplicity. Alternately this column could
	 * be mapped using @ManyToOne and @JoinColumn as an MLPToolkitType object.
	 */
	@Column(name = "TOOLKIT_TYPE_CD", columnDefinition = "CHAR(2)")
	@Size(max = 2)
	private String toolkitTypeCode;

	/**
	 * This exposes the database code for simplicity. Alternately this column could
	 * be mapped using @ManyToOne and @JoinColumn as an MLPValidationStatus object.
	 */
	@Column(name = "VALIDATION_STATUS_CD", columnDefinition = "CHAR(2)")
	@Size(max = 2)
	private String validationStatusCode;

	/**
	 * No-arg constructor
	 */
	public MLPSolution() {
		// no-arg constructor
	}

	/**
	 * This constructor accepts the required fields; i.e., the minimum that the user
	 * must supply to create a valid instance.
	 * 
	 * @param name
	 *            Solution Name
	 * @param ownerId
	 *            User ID of owner
	 * @param active
	 *            Boolean flag
	 */
	public MLPSolution(String name, String ownerId, boolean active) {
		this.name = name;
		this.ownerId = ownerId;
		this.active = active;
	}

	public String getSolutionId() {
		return solutionId;
	}

	public void setSolutionId(String solutionId) {
		this.solutionId = solutionId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getOwnerId() {
		return ownerId;
	}

	public void setOwnerId(String ownerId) {
		this.ownerId = ownerId;
	}

	public String getMetadata() {
		return metadata;
	}

	public void setMetadata(String meta) {
		this.metadata = meta;
	}

	public String getProvider() {
		return provider;
	}

	public void setProvider(String provider) {
		this.provider = provider;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String desc) {
		this.description = desc;
	}

	public boolean isActive() {
		return active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	public String getAccessTypeCode() {
		return accessTypeCode;
	}

	/**
	 * @param accessTypeCode
	 *            A value obtained by calling
	 *            {@link org.acumos.cds.AccessTypeCode#toString()}.
	 */
	public void setAccessTypeCode(String accessTypeCode) {
		this.accessTypeCode = accessTypeCode;
	}

	public String getModelTypeCode() {
		return modelTypeCode;
	}

	/**
	 * @param modelTypeCode
	 *            A value obtained by calling
	 *            {@link org.acumos.cds.ModelTypeCode#toString()}.
	 */
	public void setModelTypeCode(String modelTypeCode) {
		this.modelTypeCode = modelTypeCode;
	}

	public String getToolkitTypeCode() {
		return toolkitTypeCode;
	}

	/**
	 * @param toolkitTypeCode
	 *            A value obtained by calling
	 *            {@link org.acumos.cds.ToolkitTypeCode#toString()}.
	 */
	public void setToolkitTypeCode(String toolkitTypeCode) {
		this.toolkitTypeCode = toolkitTypeCode;
	}

	public String getValidationStatusCode() {
		return validationStatusCode;
	}

	/**
	 * @param validationStatusCode
	 *            A value obtained by calling
	 *            {@link org.acumos.cds.ValidationStatusCode#toString()}.
	 */
	public void setValidationStatusCode(String validationStatusCode) {
		this.validationStatusCode = validationStatusCode;
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (!(that instanceof MLPSolution))
			return false;
		MLPSolution thatObj = (MLPSolution) that;
		return Objects.equals(solutionId, thatObj.solutionId);
	}

	@Override
	public int hashCode() {
		return Objects.hash(solutionId, ownerId, name, provider, description);
	}

	@Override
	public String toString() {
		return this.getClass().getName() + "[solutionId=" + solutionId + ", ownerId=" + ownerId + ", name=" + name
				+ ", desc=" + description + ", created=" + getCreated() + ", modified=" + getModified() + "]";
	}

}
